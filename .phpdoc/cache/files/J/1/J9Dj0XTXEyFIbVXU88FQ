1709044999
waR3U4bTeM%3Ae9ada01b6b53cbaeebc8e42521259a39-376a987eca090cd7d87e8e3c519b56ad
s:73944:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"376a987eca090cd7d87e8e3c519b56ad";s:39:" phpDocumentor\Reflection\Php\File name";s:36:"58c48994485f90dd8dbadb5ebb55d035.php";s:39:" phpDocumentor\Reflection\Php\File path";s:58:"var/cache/dev/twig/58/58c48994485f90dd8dbadb5ebb55d035.php";s:41:" phpDocumentor\Reflection\Php\File source";s:36028:"<?php

use Twig\Environment;
use Twig\Error\LoaderError;
use Twig\Error\RuntimeError;
use Twig\Extension\SandboxExtension;
use Twig\Markup;
use Twig\Sandbox\SecurityError;
use Twig\Sandbox\SecurityNotAllowedTagError;
use Twig\Sandbox\SecurityNotAllowedFilterError;
use Twig\Sandbox\SecurityNotAllowedFunctionError;
use Twig\Source;
use Twig\Template;

/* /publication/_cardList.html.twig */
class __TwigTemplate_516c33e7abf982ac545c4561e879c65a extends Template
{
    private $source;
    private $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->parent = false;

        $this->blocks = [
            'javascript' => [$this, 'block_javascript'],
        ];
    }

    protected function doDisplay(array $context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "/publication/_cardList.html.twig"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "/publication/_cardList.html.twig"));

        // line 1
        echo "<main class=\"main-publication\">
\t<div class=\"publication-wrapper\">

\t\t";
        // line 4
        if ((twig_length_filter($this->env, (isset($context["publications"]) || array_key_exists("publications", $context) ? $context["publications"] : (function () { throw new RuntimeError('Variable "publications" does not exist.', 4, $this->source); })())) == 0)) {
            // line 5
            echo "        <a class=\"dark-round\" href=\"";
            echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_publication_new");
            echo "\">Créer une publication<i class=\"fa-solid fa-plus\"></i>
\t\t\t\t</a>
\t\t\t<h2>Aucune publication trouvée!</h2>
\t\t";
        } else {
            // line 9
            echo "

\t\t\t<div class=\"publication-scroll-header\">
\t\t\t\t<div
\t\t\t\t\tid=\"filter-modal\" class=\"filter-div\">
\t\t\t\t\t<div class=\"modal-filtre-publication\">
\t\t\t\t\t\t<li>Popularité</li>
\t\t\t\t\t\t<li>Ancienneté</li>
\t\t\t\t\t\t<li>Nouveauté</li>
\t\t\t\t\t</div>
\t\t\t\t</div>

\t\t\t\t<a class=\"dark-round\" href=\"";
            // line 21
            echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_publication_new");
            echo "\">Créer une publication<i class=\"fa-solid fa-plus\"></i>
\t\t\t\t</a>
                <div id=\"feed\" class=\"dark-round\">
                    <a href=\"";
            // line 24
            echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_publication");
            echo "\" class=\"dark-round\">Feed générale</a> | <a class=\"dark-round\" href=\"";
            echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_publication_personnalise");
            echo "\">Feed personnalisé</a>
                </div>
\t\t\t</div>

\t\t\t";
            // line 28
            $context['_parent'] = $context;
            $context['_seq'] = twig_ensure_traversable(twig_get_attribute($this->env, $this->source, (isset($context["publications"]) || array_key_exists("publications", $context) ? $context["publications"] : (function () { throw new RuntimeError('Variable "publications" does not exist.', 28, $this->source); })()), "data", [], "any", false, false, false, 28));
            $context['loop'] = [
              'parent' => $context['_parent'],
              'index0' => 0,
              'index'  => 1,
              'first'  => true,
            ];
            if (is_array($context['_seq']) || (is_object($context['_seq']) && $context['_seq'] instanceof \Countable)) {
                $length = count($context['_seq']);
                $context['loop']['revindex0'] = $length - 1;
                $context['loop']['revindex'] = $length;
                $context['loop']['length'] = $length;
                $context['loop']['last'] = 1 === $length;
            }
            foreach ($context['_seq'] as $context["_key"] => $context["publication"]) {
                // line 29
                echo "

\t\t\t\t<div class=\"publication-card\">
\t\t\t\t\t<div class=\"user-publication\">
\t\t\t\t\t\t<div class=\"user-publication-left-side\">
\t\t\t\t\t\t\t<div class=\"futur-pp\">
\t\t\t\t\t\t\t\t";
                // line 35
                if (twig_in_filter("gravatar", twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 35), "image", [], "any", false, false, false, 35))) {
                    // line 36
                    echo "\t\t\t\t\t\t\t\t\t<img id=\"image_profil1\" class=\"rounded-circle\" src=\"";
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 36), "image", [], "any", false, false, false, 36), "html", null, true);
                    echo "\" alt=\"";
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 36), "nom", [], "any", false, false, false, 36), "html", null, true);
                    echo " ";
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 36), "prenom", [], "any", false, false, false, 36), "html", null, true);
                    echo "\" width=\"50px\"/>
\t\t\t\t\t\t\t\t";
                } else {
                    // line 38
                    echo "\t\t\t\t\t\t\t\t\t<img id=\"image_profil1\" class=\"rounded-circle\" src=\"";
                    echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\AssetExtension']->getAssetUrl(("/uploads/" . twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 38), "image", [], "any", false, false, false, 38))), "html", null, true);
                    echo "\" alt=\"";
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 38), "nom", [], "any", false, false, false, 38), "html", null, true);
                    echo " ";
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 38), "prenom", [], "any", false, false, false, 38), "html", null, true);
                    echo "\" width=\"50px\"/>
\t\t\t\t\t\t\t\t";
                }
                // line 40
                echo "\t\t\t\t\t\t\t</div>
\t\t\t\t\t\t\t<div class=\"infos-user-publication\">
                                ";
                // line 42
                if ((null === twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 42), "nom", [], "any", false, false, false, 42))) {
                    // line 43
                    echo "                                <p>Utilisateur supprimé</p>
                                ";
                } else {
                    // line 45
                    echo "\t\t\t\t\t\t\t\t<p>";
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 45), "nom", [], "any", false, false, false, 45), "html", null, true);
                    echo "
\t\t\t\t\t\t\t\t\t";
                    // line 46
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 46), "prenom", [], "any", false, false, false, 46), "html", null, true);
                    echo "
                                </p>
                                ";
                }
                // line 49
                echo "                                
\t\t\t\t\t\t\t\t<p>Posté le :
\t\t\t\t\t\t\t\t\t";
                // line 51
                echo twig_escape_filter($this->env, twig_date_format_filter($this->env, twig_get_attribute($this->env, $this->source, $context["publication"], "createdAt", [], "any", false, false, false, 51), "d/m/Y à H:i"), "html", null, true);
                echo "</p>
\t\t\t\t\t\t\t\t";
                // line 52
                if (((twig_date_format_filter($this->env, twig_get_attribute($this->env, $this->source, $context["publication"], "editedAt", [], "any", false, false, false, 52), "d/m/Y à H:i") > twig_date_format_filter($this->env, twig_get_attribute($this->env, $this->source,                 // line 53
$context["publication"], "createdAt", [], "any", false, false, false, 53), "d/m/Y à H:i")) && twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 53, $this->source); })()), "user", [], "any", false, false, false, 53))) {
                    // line 54
                    echo "\t\t\t\t\t\t\t\t\t<p>Modifié le : ";
                    echo twig_escape_filter($this->env, twig_date_format_filter($this->env, twig_get_attribute($this->env, $this->source, $context["publication"], "editedAt", [], "any", false, false, false, 54), "d/m/Y à H:i"), "html", null, true);
                    echo "
                    <small>Par ";
                    // line 55
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 55, $this->source); })()), "user", [], "any", false, false, false, 55), "nom", [], "any", false, false, false, 55), "html", null, true);
                    echo " ";
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 55, $this->source); })()), "user", [], "any", false, false, false, 55), "prenom", [], "any", false, false, false, 55), "html", null, true);
                    echo "</small>
                    </p>
                                ";
                }
                // line 58
                echo "                            </div>
                        </div>
                        <div class=\"menu-publication\">
                            <div class=\"modal-menu-publication\" id=\"publication-modal\">
                                <ul>
                                    ";
                // line 63
                if ((twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 63, $this->source); })()), "user", [], "any", false, false, false, 63) && (twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 63, $this->source); })()), "user", [], "any", false, false, false, 63), "id", [], "any", false, false, false, 63) === twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 63), "id", [], "any", false, false, false, 63)))) {
                    // line 64
                    echo "                                        <a class=\"edit-publication-btn\" href=\"";
                    echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_publication_edit", ["id" => twig_get_attribute($this->env, $this->source, $context["publication"], "id", [], "any", false, false, false, 64), "slug" => twig_get_attribute($this->env, $this->source, $context["publication"], "slug", [], "any", false, false, false, 64)]), "html", null, true);
                    echo "\">Modifier</a>
                                        <a class=\"delete-publication-btn\" href=\"";
                    // line 65
                    echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_publication_delete", ["id" => twig_get_attribute($this->env, $this->source, $context["publication"], "id", [], "any", false, false, false, 65), "slug" => twig_get_attribute($this->env, $this->source, $context["publication"], "slug", [], "any", false, false, false, 65)]), "html", null, true);
                    echo "\">Supprimer</a>
                                    ";
                }
                // line 67
                echo "                                </ul>
                            </div>
                            ";
                // line 69
                if ((twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 69, $this->source); })()), "user", [], "any", false, false, false, 69) && (twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 69, $this->source); })()), "user", [], "any", false, false, false, 69), "id", [], "any", false, false, false, 69) === twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["publication"], "user", [], "any", false, false, false, 69), "id", [], "any", false, false, false, 69)))) {
                    // line 70
                    echo "
                            <i class=\"fas fa-ellipsis-v\" data-modal=\"";
                    // line 71
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["publication"], "id", [], "any", false, false, false, 71), "html", null, true);
                    echo "\"></i>
                            ";
                }
                // line 73
                echo "
                        </div>
                    </div>
                    ";
                // line 76
                $context['_parent'] = $context;
                $context['_seq'] = twig_ensure_traversable(twig_get_attribute($this->env, $this->source, $context["publication"], "mediaPublication", [], "any", false, false, false, 76));
                foreach ($context['_seq'] as $context["key"] => $context["img"]) {
                    // line 77
                    echo "                        ";
                    if (($context["key"] == 0)) {
                        // line 78
                        echo "                            <a  href=\"";
                        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_show_media", ["slug" => twig_get_attribute($this->env, $this->source, $context["img"], "slug", [], "any", false, false, false, 78)]), "html", null, true);
                        echo "\">
                                <img class=\"img-publication card-img-top img-fluid\" src=\"";
                        // line 79
                        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\AssetExtension']->getAssetUrl(("/uploads/" . twig_get_attribute($this->env, $this->source, $context["img"], "lien", [], "any", false, false, false, 79))), "html", null, true);
                        echo "\" alt=\"";
                        echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["img"], "titre", [], "any", false, false, false, 79), "html", null, true);
                        echo "\"/></a>
                        ";
                    }
                    // line 81
                    echo "                    ";
                }
                $_parent = $context['_parent'];
                unset($context['_seq'], $context['_iterated'], $context['key'], $context['img'], $context['_parent'], $context['loop']);
                $context = array_intersect_key($context, $_parent) + $_parent;
                // line 82
                echo "                    <h2>
                        <a href=\"";
                // line 83
                echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_publication_show", ["id" => twig_get_attribute($this->env, $this->source, $context["publication"], "id", [], "any", false, false, false, 83), "slug" => twig_get_attribute($this->env, $this->source, $context["publication"], "slug", [], "any", false, false, false, 83)]), "html", null, true);
                echo "\">";
                echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["publication"], "titre", [], "any", false, false, false, 83), "html", null, true);
                echo "</a>
                    </h2>
                    <div>";
                // line 85
                echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["publication"], "contenu", [], "any", false, false, false, 85), "html", null, true);
                echo "</div>
                    <div class=\"tag-div\">
                        <div>
                            ";
                // line 88
                $context['_parent'] = $context;
                $context['_seq'] = twig_ensure_traversable(twig_get_attribute($this->env, $this->source, $context["publication"], "tagsPublication", [], "any", false, false, false, 88));
                foreach ($context['_seq'] as $context["_key"] => $context["tag"]) {
                    // line 89
                    echo "                                <a href=\"";
                    echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("app_publication", ["tag" => twig_get_attribute($this->env, $this->source, $context["tag"], "intitule", [], "any", false, false, false, 89)]), "html", null, true);
                    echo "\"><span class=\"badge badge-pill badge-info text-info\">#";
                    echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["tag"], "intitule", [], "any", false, false, false, 89), "html", null, true);
                    echo "</span></a>
                            ";
                }
                $_parent = $context['_parent'];
                unset($context['_seq'], $context['_iterated'], $context['_key'], $context['tag'], $context['_parent'], $context['loop']);
                $context = array_intersect_key($context, $_parent) + $_parent;
                // line 91
                echo "                        </div>
                        ";
                // line 92
                $this->loadTemplate("/publication/reaction.html.twig", "/publication/_cardList.html.twig", 92)->display($context);
                // line 93
                echo "                    </div>
                </div>
            ";
                ++$context['loop']['index0'];
                ++$context['loop']['index'];
                $context['loop']['first'] = false;
                if (isset($context['loop']['length'])) {
                    --$context['loop']['revindex0'];
                    --$context['loop']['revindex'];
                    $context['loop']['last'] = 0 === $context['loop']['revindex0'];
                }
            }
            $_parent = $context['_parent'];
            unset($context['_seq'], $context['_iterated'], $context['_key'], $context['publication'], $context['_parent'], $context['loop']);
            $context = array_intersect_key($context, $_parent) + $_parent;
            // line 96
            echo "            ";
            $context["path"] = "app_publication";
            // line 97
            echo "            ";
            $context["pages"] = twig_get_attribute($this->env, $this->source, (isset($context["publications"]) || array_key_exists("publications", $context) ? $context["publications"] : (function () { throw new RuntimeError('Variable "publications" does not exist.', 97, $this->source); })()), "pages", [], "any", false, false, false, 97);
            // line 98
            echo "            ";
            $context["q"] = twig_get_attribute($this->env, $this->source, (isset($context["publications"]) || array_key_exists("publications", $context) ? $context["publications"] : (function () { throw new RuntimeError('Variable "publications" does not exist.', 98, $this->source); })()), "q", [], "any", false, false, false, 98);
            // line 99
            echo "            ";
            $context["tag"] = twig_get_attribute($this->env, $this->source, (isset($context["publications"]) || array_key_exists("publications", $context) ? $context["publications"] : (function () { throw new RuntimeError('Variable "publications" does not exist.', 99, $this->source); })()), "tag", [], "any", false, false, false, 99);
            // line 100
            echo "            ";
            $context["currentPage"] = twig_get_attribute($this->env, $this->source, (isset($context["publications"]) || array_key_exists("publications", $context) ? $context["publications"] : (function () { throw new RuntimeError('Variable "publications" does not exist.', 100, $this->source); })()), "page", [], "any", false, false, false, 100);
            // line 101
            echo "            ";
            $this->loadTemplate("/_partials/_pagination.html.twig", "/publication/_cardList.html.twig", 101)->display($context);
            // line 102
            echo "        </div>
    </main>

";
            // line 105
            $context["foo"] = twig_length_filter($this->env, twig_get_attribute($this->env, $this->source, (isset($context["publications"]) || array_key_exists("publications", $context) ? $context["publications"] : (function () { throw new RuntimeError('Variable "publications" does not exist.', 105, $this->source); })()), "data", [], "any", false, false, false, 105));
            // line 106
            echo "
            ";
        }
        // line 108
        $this->displayBlock('javascript', $context, $blocks);
        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

    }

    public function block_javascript($context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_5a27a8ba21ca79b61932376b2fa922d2 = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->enter($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "javascript"));

        $__internal_6f47bbe9983af81f1e7450e9a3e3768f = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->enter($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "javascript"));

        // line 109
        echo "\t<script>
\t\tconst menuPublications = document.querySelectorAll('.menu-publication');

// Pour chaque élément avec la classe \"menu-publication\", ajouter un écouteur d'événements pour le clic sur l'icône
menuPublications.forEach(function (menuPublication) {
const modalPublication = menuPublication.querySelector('.modal-menu-publication');
const editPublicationBtn = menuPublication.querySelector('.edit-publication-btn');
const deletePublicationBtn = menuPublication.querySelector('.delete-publication-btn');
const ellipsisIcon = menuPublication.querySelector('.fas.fa-ellipsis-v');

ellipsisIcon.addEventListener('click', function () { // Fermer toutes les modales ouvertes
document.querySelectorAll('.modal-menu-publication').forEach(function (modal) {
modal.style.display = 'none';
});

// Ouvrir la modal correspondant à l'icône cliquée
modalPublication.style.display = 'block';
});
});

// Ajouter un écouteur d'événements pour le clic sur l'écran pour fermer les modales
document.addEventListener('click', function (event) {
if (! event.target.matches('.fas.fa-ellipsis-v') && ! event.target.matches('.modal-menu-publication *')) {
document.querySelectorAll('.modal-menu-publication').forEach(function (modal) {
modal.style.display = 'none';
});
}
});


// Sélectionne l'élément i qui doit activer la modal
const filterButton = document.querySelector(\"#filter-modal i\");

// Sélectionne l'élément de la modal
const filterModal = document.querySelector(\"#filter-modal .modal-filtre-publication\");

// Ajoute un écouteur d'événements sur le bouton pour afficher la modal
filterButton.addEventListener(\"click\", function () {
filterModal.style.display = \"block\";
});

// Ajoute un écouteur d'événements à l'ensemble du document pour masquer la modal lorsqu'on clique ailleurs
document.addEventListener(\"click\", function (event) {
if (! filterModal.contains(event.target) && event.target !== filterButton) {
filterModal.style.display = \"none\";
}
});

console.log('hello')
\t</script>
";
        
        $__internal_6f47bbe9983af81f1e7450e9a3e3768f->leave($__internal_6f47bbe9983af81f1e7450e9a3e3768f_prof);

        
        $__internal_5a27a8ba21ca79b61932376b2fa922d2->leave($__internal_5a27a8ba21ca79b61932376b2fa922d2_prof);

    }

    public function getTemplateName()
    {
        return "/publication/_cardList.html.twig";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  343 => 109,  324 => 108,  320 => 106,  318 => 105,  313 => 102,  310 => 101,  307 => 100,  304 => 99,  301 => 98,  298 => 97,  295 => 96,  279 => 93,  277 => 92,  274 => 91,  263 => 89,  259 => 88,  253 => 85,  246 => 83,  243 => 82,  237 => 81,  230 => 79,  225 => 78,  222 => 77,  218 => 76,  213 => 73,  208 => 71,  205 => 70,  203 => 69,  199 => 67,  194 => 65,  189 => 64,  187 => 63,  180 => 58,  172 => 55,  167 => 54,  165 => 53,  164 => 52,  160 => 51,  156 => 49,  150 => 46,  145 => 45,  141 => 43,  139 => 42,  135 => 40,  125 => 38,  115 => 36,  113 => 35,  105 => 29,  88 => 28,  79 => 24,  73 => 21,  59 => 9,  51 => 5,  49 => 4,  44 => 1,);
    }

    public function getSourceContext()
    {
        return new Source("<main class=\"main-publication\">
\t<div class=\"publication-wrapper\">

\t\t{% if publications|length == 0 %}
        <a class=\"dark-round\" href=\"{{path('app_publication_new')}}\">Créer une publication<i class=\"fa-solid fa-plus\"></i>
\t\t\t\t</a>
\t\t\t<h2>Aucune publication trouvée!</h2>
\t\t{% else %}


\t\t\t<div class=\"publication-scroll-header\">
\t\t\t\t<div
\t\t\t\t\tid=\"filter-modal\" class=\"filter-div\">
\t\t\t\t\t<div class=\"modal-filtre-publication\">
\t\t\t\t\t\t<li>Popularité</li>
\t\t\t\t\t\t<li>Ancienneté</li>
\t\t\t\t\t\t<li>Nouveauté</li>
\t\t\t\t\t</div>
\t\t\t\t</div>

\t\t\t\t<a class=\"dark-round\" href=\"{{path('app_publication_new')}}\">Créer une publication<i class=\"fa-solid fa-plus\"></i>
\t\t\t\t</a>
                <div id=\"feed\" class=\"dark-round\">
                    <a href=\"{{ path('app_publication') }}\" class=\"dark-round\">Feed générale</a> | <a class=\"dark-round\" href=\"{{ path('app_publication_personnalise') }}\">Feed personnalisé</a>
                </div>
\t\t\t</div>

\t\t\t{% for publication in publications.data %}


\t\t\t\t<div class=\"publication-card\">
\t\t\t\t\t<div class=\"user-publication\">
\t\t\t\t\t\t<div class=\"user-publication-left-side\">
\t\t\t\t\t\t\t<div class=\"futur-pp\">
\t\t\t\t\t\t\t\t{% if 'gravatar' in publication.user.image %}
\t\t\t\t\t\t\t\t\t<img id=\"image_profil1\" class=\"rounded-circle\" src=\"{{ publication.user.image }}\" alt=\"{{ publication.user.nom }} {{ publication.user.prenom }}\" width=\"50px\"/>
\t\t\t\t\t\t\t\t{% else %}
\t\t\t\t\t\t\t\t\t<img id=\"image_profil1\" class=\"rounded-circle\" src=\"{{ asset('/uploads/' ~ publication.user.image) }}\" alt=\"{{ publication.user.nom }} {{ publication.user.prenom }}\" width=\"50px\"/>
\t\t\t\t\t\t\t\t{% endif %}
\t\t\t\t\t\t\t</div>
\t\t\t\t\t\t\t<div class=\"infos-user-publication\">
                                {% if publication.user.nom is null %}
                                <p>Utilisateur supprimé</p>
                                {% else %}
\t\t\t\t\t\t\t\t<p>{{ publication.user.nom }}
\t\t\t\t\t\t\t\t\t{{ publication.user.prenom }}
                                </p>
                                {% endif %}
                                
\t\t\t\t\t\t\t\t<p>Posté le :
\t\t\t\t\t\t\t\t\t{{publication.createdAt | date('d/m/Y à H:i')}}</p>
\t\t\t\t\t\t\t\t{% if (publication.editedAt | date('d/m/Y à H:i') >
                                    publication.createdAt | date('d/m/Y à H:i')) and (app.user) %}
\t\t\t\t\t\t\t\t\t<p>Modifié le : {{publication.editedAt | date('d/m/Y à H:i')}}
                    <small>Par {{ app.user.nom }} {{ app.user.prenom }}</small>
                    </p>
                                {% endif %}
                            </div>
                        </div>
                        <div class=\"menu-publication\">
                            <div class=\"modal-menu-publication\" id=\"publication-modal\">
                                <ul>
                                    {% if (app.user) and (app.user.id is same as publication.user.id)  %}
                                        <a class=\"edit-publication-btn\" href=\"{{ path('app_publication_edit', { id: publication.id, slug: publication.slug }) }}\">Modifier</a>
                                        <a class=\"delete-publication-btn\" href=\"{{ path('app_publication_delete', { id: publication.id, slug: publication.slug }) }}\">Supprimer</a>
                                    {% endif %}
                                </ul>
                            </div>
                            {% if (app.user) and (app.user.id is same as publication.user.id)  %}

                            <i class=\"fas fa-ellipsis-v\" data-modal=\"{{publication.id}}\"></i>
                            {% endif %}

                        </div>
                    </div>
                    {% for key, img in publication.mediaPublication %}
                        {% if key == 0 %}
                            <a  href=\"{{ path('app_show_media', { slug: img.slug }) }}\">
                                <img class=\"img-publication card-img-top img-fluid\" src=\"{{ asset('/uploads/' ~ img.lien) }}\" alt=\"{{ img.titre }}\"/></a>
                        {% endif %}
                    {% endfor %}
                    <h2>
                        <a href=\"{{ path('app_publication_show', { id: publication.id, slug: publication.slug }) }}\">{{ publication.titre }}</a>
                    </h2>
                    <div>{{ publication.contenu }}</div>
                    <div class=\"tag-div\">
                        <div>
                            {% for tag in publication.tagsPublication %}
                                <a href=\"{{ path('app_publication', {tag: tag.intitule})}}\"><span class=\"badge badge-pill badge-info text-info\">#{{ tag.intitule }}</span></a>
                            {% endfor %}
                        </div>
                        {% include '/publication/reaction.html.twig' %}
                    </div>
                </div>
            {% endfor %}
            {% set path = 'app_publication' %}
            {% set pages = publications.pages %}
            {% set q = publications.q %}
            {% set tag = publications.tag %}
            {% set currentPage = publications.page %}
            {% include '/_partials/_pagination.html.twig' %}
        </div>
    </main>

{% set foo = publications.data|length  %}

            {% endif %}
{% block javascript %}
\t<script>
\t\tconst menuPublications = document.querySelectorAll('.menu-publication');

// Pour chaque élément avec la classe \"menu-publication\", ajouter un écouteur d'événements pour le clic sur l'icône
menuPublications.forEach(function (menuPublication) {
const modalPublication = menuPublication.querySelector('.modal-menu-publication');
const editPublicationBtn = menuPublication.querySelector('.edit-publication-btn');
const deletePublicationBtn = menuPublication.querySelector('.delete-publication-btn');
const ellipsisIcon = menuPublication.querySelector('.fas.fa-ellipsis-v');

ellipsisIcon.addEventListener('click', function () { // Fermer toutes les modales ouvertes
document.querySelectorAll('.modal-menu-publication').forEach(function (modal) {
modal.style.display = 'none';
});

// Ouvrir la modal correspondant à l'icône cliquée
modalPublication.style.display = 'block';
});
});

// Ajouter un écouteur d'événements pour le clic sur l'écran pour fermer les modales
document.addEventListener('click', function (event) {
if (! event.target.matches('.fas.fa-ellipsis-v') && ! event.target.matches('.modal-menu-publication *')) {
document.querySelectorAll('.modal-menu-publication').forEach(function (modal) {
modal.style.display = 'none';
});
}
});


// Sélectionne l'élément i qui doit activer la modal
const filterButton = document.querySelector(\"#filter-modal i\");

// Sélectionne l'élément de la modal
const filterModal = document.querySelector(\"#filter-modal .modal-filtre-publication\");

// Ajoute un écouteur d'événements sur le bouton pour afficher la modal
filterButton.addEventListener(\"click\", function () {
filterModal.style.display = \"block\";
});

// Ajoute un écouteur d'événements à l'ensemble du document pour masquer la modal lorsqu'on clique ailleurs
document.addEventListener(\"click\", function (event) {
if (! filterModal.contains(event.target) && event.target !== filterButton) {
filterModal.style.display = \"none\";
}
});

console.log('hello')
\t</script>
{% endblock %}
", "/publication/_cardList.html.twig", "C:\\Users\\CDA22\\Desktop\\Fitnet\\templates\\publication\\_cardList.html.twig");
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:48:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a";O:35:"phpDocumentor\Reflection\Php\Class_":13:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:48:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a";s:36:" phpDocumentor\Reflection\Fqsen name";s:47:"__TwigTemplate_516c33e7abf982ac545c4561e879c65a";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:14:"\Twig\Template";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Template";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:2:{s:57:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::$source";O:37:"phpDocumentor\Reflection\Php\Property":11:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:57:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::$source";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"source";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}s:57:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::$macros";O:37:"phpDocumentor\Reflection\Php\Property":11:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:57:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::$macros";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"macros";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"[]";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:7:{s:63:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:63:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"env";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\Twig\Environment";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Environment";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:21;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:32;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:61:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::doDisplay()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:61:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::doDisplay()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"doDisplay";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:34;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:331;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:68:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::block_javascript()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:68:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::block_javascript()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"block_javascript";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:333;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:400;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:67:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::getTemplateName()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:67:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::getTemplateName()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"getTemplateName";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:402;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:405;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:63:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::isTraitable()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:63:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::isTraitable()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"isTraitable";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:407;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:410;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:64:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::getDebugInfo()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:64:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::getDebugInfo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"getDebugInfo";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:412;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:415;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:68:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::getSourceContext()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:68:"\__TwigTemplate_516c33e7abf982ac545c4561e879c65a::getSourceContext()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"getSourceContext";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:417;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:579;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:16;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:580;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";